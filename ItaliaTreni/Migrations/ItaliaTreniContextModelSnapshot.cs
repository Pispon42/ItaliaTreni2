// <auto-generated />
using ItaliaTreni.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ItaliaTreni.Migrations
{
    [DbContext(typeof(ItaliaTreniContext))]
    partial class ItaliaTreniContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ItaliaTreni.Models.Measurement", b =>
                {
                    b.Property<int>("mmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mmId"));

                    b.Property<float>("p1")
                        .HasColumnType("real");

                    b.Property<float>("p2")
                        .HasColumnType("real");

                    b.Property<float>("p3")
                        .HasColumnType("real");

                    b.Property<float>("p4")
                        .HasColumnType("real");

                    b.HasKey("mmId");

                    b.ToTable("Measurement");
                });

            modelBuilder.Entity("ItaliaTreni.Models.OutOfScaleMeasurement", b =>
                {
                    b.Property<int>("mmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mmId"));

                    b.Property<float>("e1")
                        .HasColumnType("real");

                    b.Property<float>("e2")
                        .HasColumnType("real");

                    b.Property<float>("e3")
                        .HasColumnType("real");

                    b.Property<float>("e4")
                        .HasColumnType("real");

                    b.Property<int>("mm_fine")
                        .HasColumnType("int");

                    b.Property<float>("s1")
                        .HasColumnType("real");

                    b.Property<float>("s2")
                        .HasColumnType("real");

                    b.Property<float>("s3")
                        .HasColumnType("real");

                    b.Property<float>("s4")
                        .HasColumnType("real");

                    b.HasKey("mmId");

                    b.ToTable("OutOfScaleMeasurement");
                });
#pragma warning restore 612, 618
        }
    }
}
